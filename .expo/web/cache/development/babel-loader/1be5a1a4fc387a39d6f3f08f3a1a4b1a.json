{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_COUNT, GET_LIKES, INCREMENT_COUNT, GET_TOPS, GET_NOTIFICATIONS } from \"../actions/types\";\nvar initialState = {\n  likes: 0,\n  count: 0,\n  tops: [],\n  notifications: []\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_COUNT:\n      return _objectSpread({}, state, {\n        count: action.payload\n      });\n\n    case GET_LIKES:\n      return _objectSpread({}, state, {\n        likes: action.payload\n      });\n\n    case INCREMENT_COUNT:\n      return _objectSpread({}, state, {\n        count: state.count + 1\n      });\n\n    case GET_TOPS:\n      return _objectSpread({}, state, {\n        tops: action.payload\n      });\n\n    case GET_NOTIFICATIONS:\n      return _objectSpread({}, state, {\n        notifications: action.payload\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/anthi/Documents/conmeter/conmeter/redux/reducers/mis.js"],"names":["GET_COUNT","GET_LIKES","INCREMENT_COUNT","GET_TOPS","GET_NOTIFICATIONS","initialState","likes","count","tops","notifications","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,eAA/B,EAAgDC,QAAhD,EAA0DC,iBAA1D;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,CADU;AAEjBC,EAAAA,KAAK,EAAE,CAFU;AAGjBC,EAAAA,IAAI,EAAE,EAHW;AAIjBC,EAAAA,aAAa,EAAE;AAJE,CAArB;AAOA,eAAe,YACf;AAAA,MADwBC,KACxB,uEADgCL,YAChC;AAAA,MAD8CM,MAC9C;;AACI,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAKZ,SAAL;AACI,+BACOU,KADP;AAEIH,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAFlB;;AAKJ,SAAKZ,SAAL;AACI,+BACOS,KADP;AAEIJ,QAAAA,KAAK,EAAEK,MAAM,CAACE;AAFlB;;AAKJ,SAAKX,eAAL;AACI,+BACOQ,KADP;AAEIH,QAAAA,KAAK,EAAEG,KAAK,CAACH,KAAN,GAAY;AAFvB;;AAKJ,SAAKJ,QAAL;AACI,+BACOO,KADP;AAEIF,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAFjB;;AAKJ,SAAKT,iBAAL;AACI,+BACOM,KADP;AAEID,QAAAA,aAAa,EAAEE,MAAM,CAACE;AAF1B;;AAKJ;AACI,aAAOH,KAAP;AAjCR;AAmCH","sourcesContent":["import { GET_COUNT, GET_LIKES, INCREMENT_COUNT, GET_TOPS, GET_NOTIFICATIONS } from '../actions/types'\r\n\r\nconst initialState = {\r\n    likes: 0,\r\n    count: 0,\r\n    tops: [],\r\n    notifications: [],\r\n}\r\n\r\nexport default function(state = initialState, action)\r\n{\r\n    switch(action.type){\r\n\r\n        case GET_COUNT:\r\n            return{\r\n                ...state,\r\n                count: action.payload\r\n            }\r\n        \r\n        case GET_LIKES:\r\n            return{\r\n                ...state,\r\n                likes: action.payload\r\n            }\r\n\r\n        case INCREMENT_COUNT:\r\n            return{\r\n                ...state,\r\n                count: state.count+1\r\n            }\r\n\r\n        case GET_TOPS:\r\n            return{\r\n                ...state,\r\n                tops: action.payload\r\n            }\r\n\r\n        case GET_NOTIFICATIONS:\r\n            return{\r\n                ...state,\r\n                notifications: action.payload\r\n            }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}