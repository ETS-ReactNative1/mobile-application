{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anthi\\\\Documents\\\\conmeter\\\\conmeter\\\\screens\\\\auth\\\\Login.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from \"../../redux/actions/auth\";\nimport { Button, Text, Input, Icon } from 'react-native-elements';\nimport Colors from \"../../constants/Colors\";\nimport Fonts from \"../../constants/Fonts\";\nimport Layout from \"../../constants/Layout\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar _Layout$window = Layout.window,\n    width = _Layout$window.width,\n    height = _Layout$window.height;\nexport default function Login(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var isAuthenticated = useSelector(function (state) {\n    return state.auth.isAuthenticated;\n  });\n  var dispatch = useDispatch();\n\n  var emailChange = function emailChange(email) {\n    setEmail(email);\n  };\n\n  var passwordChange = function passwordChange(password) {\n    setPassword(password);\n  };\n\n  var _onChangePressed = function _onChangePressed() {\n    dispatch(login(email, password));\n  };\n\n  var navigation = props.navigation;\n\n  if (isAuthenticated) {\n    navigation.navigate('Root');\n  }\n\n  return React.createElement(View, {\n    style: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.head,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"CM\")), React.createElement(View, {\n    style: styles.body,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    type: \"email\",\n    placeholder: \"Email\",\n    onChangeText: emailChange,\n    autoCapitalize: \"none\",\n    leftIcon: React.createElement(Icon, {\n      name: \"email\",\n      size: 24,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(Input, {\n    type: \"password\",\n    placeholder: \"Password\",\n    password: true,\n    leftIcon: React.createElement(Icon, {\n      name: \"lock\",\n      size: 24,\n      color: \"black\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }),\n    autoCapitalize: \"none\",\n    onChangeText: function onChangeText(value) {\n      return passwordChange(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.links,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate('Register');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Not yet a member?Click here to register.\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate('ForgotPassword');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \"Forgot you password?Click here to reset it.\"))), React.createElement(View, {\n    style: styles.submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    icon: {\n      name: \"arrow-forward\",\n      size: 15,\n      color: \"black\"\n    },\n    title: \"Login\",\n    type: \"outline\",\n    onPress: function onPress() {\n      return _onChangePressed();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1\n  },\n  head: {\n    flex: 0.4,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  body: {\n    flex: 0.6,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  logo: {\n    fontFamily: Fonts.logo,\n    color: Colors.text,\n    fontSize: 150\n  },\n  email: {\n    flex: 0.3,\n    width: width * 0.8\n  },\n  password: {\n    flex: 0.3,\n    width: width * 0.8\n  },\n  links: {\n    flex: 0.2,\n    alignItems: 'center',\n    width: width * 0.8\n  },\n  submit: {\n    flex: 0.2,\n    alignItems: 'center',\n    width: width * 0.8\n  }\n});","map":{"version":3,"sources":["C:/Users/anthi/Documents/conmeter/conmeter/screens/auth/Login.js"],"names":["React","useState","useDispatch","useSelector","login","Button","Text","Input","Icon","Colors","Fonts","Layout","window","width","height","Login","props","email","setEmail","password","setPassword","isAuthenticated","state","auth","dispatch","emailChange","passwordChange","_onChangePressed","navigation","navigate","styles","main","head","logo","body","value","links","submit","name","size","color","StyleSheet","create","flex","alignItems","justifyContent","fontFamily","text","fontSize"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport { StyleSheet, View, TouchableHighlight } from 'react-native';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../redux/actions/auth';\r\nimport { Button, Text, Input, Icon } from 'react-native-elements'\r\nimport Colors from '../../constants/Colors'\r\nimport Fonts from '../../constants/Fonts'\r\nimport Layout from '../../constants/Layout'\r\nimport { TouchableOpacity } from 'react-native';\r\n\r\nconst { width, height } = Layout.window\r\n\r\nexport default function Login(props) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const isAuthenticated = useSelector(state => state.auth.isAuthenticated);\r\n    const dispatch = useDispatch();\r\n\r\n    const emailChange = (email) => {\r\n        setEmail(email)\r\n    }\r\n    \r\n    const passwordChange = (password) => {\r\n        setPassword(password)\r\n    }\r\n\r\n    const _onChangePressed = () => {\r\n        dispatch(login(email, password))\r\n    }\r\n    \r\n    const { navigation } = props\r\n    if(isAuthenticated)\r\n    {\r\n        navigation.navigate('Root')\r\n    }\r\n\r\n    return (\r\n        <View style={styles.main}>\r\n        <View style={styles.head}>\r\n            <Text style={styles.logo}>CM</Text>\r\n        </View>\r\n        <View style={styles.body}>\r\n            <View style={styles.email}>\r\n            <Input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            onChangeText= {emailChange}\r\n            autoCapitalize=\"none\"\r\n            leftIcon={\r\n                <Icon\r\n                name='email'\r\n                size={24}\r\n                color='black'\r\n                />}/>\r\n            </View>\r\n            <View style={styles.password}>\r\n            <Input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            password= {true}\r\n            leftIcon={\r\n                <Icon\r\n                name='lock'\r\n                size={24}\r\n                color='black'\r\n                />}\r\n            autoCapitalize=\"none\"\r\n            onChangeText= {(value) =>passwordChange(value)}\r\n                />\r\n            </View>\r\n            <View style={styles.links}>\r\n            <TouchableOpacity onPress={() => {navigation.navigate('Register')}}>\r\n                <Text>Not yet a member?Click here to register.\r\n                 </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity onPress={() => {navigation.navigate('ForgotPassword')}}>\r\n                <Text>Forgot you password?Click here to reset it.\r\n                 </Text>\r\n            </TouchableOpacity>\r\n            </View>\r\n            <View style={styles.submit}>\r\n                <Button\r\n                 icon={{\r\n                        name: \"arrow-forward\",\r\n                        size: 15,\r\n                        color: \"black\"\r\n                    }}\r\n                title=\"Login\"\r\n                type=\"outline\"\r\n                onPress={() => _onChangePressed()}\r\n                />\r\n            </View>\r\n        </View>    \r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\nmain: {\r\n    flex:1\r\n},\r\nhead: {\r\n    flex: 0.4,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n},\r\nbody: {\r\n    flex: 0.6,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n},\r\nlogo: {\r\n    fontFamily: Fonts.logo,\r\n    color: Colors.text,\r\n    fontSize: 150\r\n},\r\nemail:{\r\n    flex:0.3,\r\n    width: width*0.8,\r\n},\r\npassword:{\r\n    flex:0.3,\r\n    width: width*0.8,\r\n},\r\nlinks: {\r\n    flex:0.2,\r\n    alignItems: 'center',\r\n    width: width*0.8,\r\n},\r\nsubmit:{\r\n    flex:0.2,\r\n    alignItems: 'center',\r\n    width: width*0.8,\r\n}\r\n\r\n})"]},"metadata":{},"sourceType":"module"}