{"ast":null,"code":"import axios from 'axios';\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_FAIL, LOGIN_SUCCESS, REGISTRATION_FAIL, REGISTRATION_SUCCESS, GET_ERRORS, LOGOUT_USER, SET_LOADER, CHANGE_PROFILE_PIC, SET_MESSAGE, CHANGE_STATE } from \"./types\";\nexport var loadUser = function loadUser() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: USER_LOADING\n    });\n    var token = getState().auth.token;\n    var config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    if (token) {\n      config.header['Authorization'] = \"Token \" + token;\n    }\n\n    dispatch({\n      type: SET_LOADER\n    });\n    axios.get('/auth/user/', tokenConfig(getState)).then(function (res) {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    });\n  };\n};\nexport var login = function login(email, password) {\n  return function (dispatch) {\n    var config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    var body = JSON.stringify({\n      email: email,\n      password: password\n    });\n    dispatch({\n      type: SET_LOADER\n    });\n    axios.post('/auth/login/', body, config).then(function (res) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: LOGIN_FAIL\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n      var error = {\n        msg: err.response.data,\n        status: err.response.status\n      };\n      dispatch({\n        type: GET_ERRORS,\n        payload: error\n      });\n    });\n  };\n};\nexport var reg = function reg(payload) {\n  return function (dispatch) {\n    var config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    dispatch({\n      type: SET_LOADER\n    });\n    console.log(payload);\n    axios.post('/auth/register/', payload, config).then(function (res) {\n      console.log(res.data);\n      dispatch({\n        type: REGISTRATION_SUCCESS,\n        payload: res.data\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: REGISTRATION_FAIL\n      });\n      var error = {\n        msg: err.response.data,\n        status: err.response.status\n      };\n      dispatch({\n        type: GET_ERRORS,\n        payload: error\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: SET_LOADER\n    });\n    axios.post('/auth/logout/', null, tokenConfig(getState)).then(function (res) {\n      dispatch({\n        type: LOGOUT_USER\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    }).catch(function (err) {\n      console.log(err);\n      dispatch({\n        type: SET_LOADER\n      });\n    });\n  };\n};\nexport var tokenConfig = function tokenConfig(getState, payload) {\n  var token = getState().auth.token;\n  var config = {\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    params: null\n  };\n\n  if (token) {\n    config.headers['Authorization'] = \"Token \" + token;\n  }\n\n  if (payload) {\n    config.params = payload;\n  }\n\n  return config;\n};\nexport var changeProfilePic = function changeProfilePic(uri) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: SET_LOADER\n    });\n    var token = getState().auth.token;\n    var config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n\n    if (token) {\n      config.headers['Authorization'] = \"Token \" + token;\n    }\n\n    var uriParts = uri.split('.');\n    var fileType = uriParts[uriParts.length - 1];\n    var formData = new FormData();\n    formData.append('image', {\n      uri: uri,\n      name: \"photo.\" + fileType,\n      type: \"image/\" + fileType\n    });\n    axios.patch('/auth/user/', formData, config).then(function (response) {\n      dispatch({\n        type: CHANGE_PROFILE_PIC,\n        payload: response.data\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    }).catch(function (error) {\n      console.log(error);\n      dispatch({\n        type: SET_LOADER\n      });\n    });\n  };\n};\nexport var otpGen = function otpGen() {\n  return function (dispatch, getState) {\n    axios.get('/api/otp/', tokenConfig(getState)).then(function (response) {\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data['status']\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var ckOTP = function ckOTP(payload) {\n  return function (dispatch, getState) {\n    axios.post('/api/otp/', payload, tokenConfig(getState)).then(function (response) {\n      if (response.data['status'] === \"success\") {\n        dispatch({\n          type: SET_MESSAGE,\n          payload: \"Phone verified\"\n        });\n        dispatch({\n          type: CHANGE_STATE\n        });\n      } else {\n        dispatch({\n          type: SET_MESSAGE,\n          payload: \"WRONG OTP\"\n        });\n      }\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/anthi/Documents/GitHub/cap/redux/actions/auth.js"],"names":["axios","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_FAIL","LOGIN_SUCCESS","REGISTRATION_FAIL","REGISTRATION_SUCCESS","GET_ERRORS","LOGOUT_USER","SET_LOADER","CHANGE_PROFILE_PIC","SET_MESSAGE","CHANGE_STATE","loadUser","dispatch","getState","type","token","auth","config","header","get","tokenConfig","then","res","payload","data","catch","error","login","email","password","headers","body","JSON","stringify","post","err","msg","response","status","reg","console","log","logout","params","changeProfilePic","uri","uriParts","split","fileType","length","formData","FormData","append","name","patch","otpGen","ckOTP"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_FAIL, \r\n  LOGIN_SUCCESS, REGISTRATION_FAIL, REGISTRATION_SUCCESS, \r\n  GET_ERRORS, LOGOUT_USER,  SET_LOADER, CHANGE_PROFILE_PIC, SET_MESSAGE, CHANGE_STATE } from './types';\r\n\r\n\r\nexport const loadUser = () => (dispatch, getState) =>{\r\n    dispatch({type: USER_LOADING});\r\n\r\n    const token = getState().auth.token;\r\n\r\n    const config = {\r\n        header:{\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }\r\n\r\n    if(token){\r\n        config.header['Authorization'] = `Token ${token}`;\r\n    }\r\n    dispatch({\r\n      type: SET_LOADER\r\n    });\r\n    axios.get('/auth/user/', tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: res.data\r\n            });\r\n            dispatch({\r\n              type: SET_LOADER\r\n            });\r\n        })\r\n        .catch(error => {\r\n            dispatch({\r\n                type: AUTH_ERROR\r\n            });\r\n            dispatch({\r\n              type: SET_LOADER\r\n            });\r\n        })\r\n} \r\n\r\n\r\nexport const login = (email, password) => (dispatch) =>{\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      };\r\n    \r\n      // Request Body\r\n      const body = JSON.stringify({ email, password });\r\n\r\n      dispatch({\r\n        type: SET_LOADER\r\n      });\r\n    \r\n      axios\r\n        .post('/auth/login/', body, config)\r\n        .then((res) => {\r\n          dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data,\r\n          });\r\n          dispatch({\r\n            type: SET_LOADER\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          dispatch({\r\n            type: LOGIN_FAIL,\r\n          });\r\n          dispatch({\r\n            type: SET_LOADER\r\n          });\r\n          const error ={\r\n            msg: err.response.data,\r\n            status: err.response.status\r\n          };\r\n          dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error\r\n          });\r\n        })\r\n    \r\n} \r\n\r\nexport const reg = (payload) => (dispatch) =>{\r\n  \r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  dispatch({\r\n    type: SET_LOADER\r\n  });\r\n\r\n  console.log(payload)\r\n\r\n  axios\r\n  .post('/auth/register/', payload, config)\r\n  .then((res) => {\r\n    console.log(res.data)\r\n    dispatch({\r\n      type: REGISTRATION_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n    dispatch({\r\n      type: SET_LOADER\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    dispatch({\r\n      type: REGISTRATION_FAIL,\r\n    });\r\n    const error ={\r\n      msg: err.response.data,\r\n      status: err.response.status\r\n    };\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error\r\n    });\r\n    dispatch({\r\n      type: SET_LOADER\r\n    });\r\n  })\r\n\r\n}\r\n\r\nexport const logout = () => (dispatch, getState) =>{\r\n\r\n  dispatch({\r\n    type: SET_LOADER\r\n  });\r\n  axios.post('/auth/logout/', null, tokenConfig(getState))\r\n    .then(\r\n      res =>{\r\n      dispatch({\r\n        type: LOGOUT_USER\r\n      });\r\n      dispatch({\r\n        type: SET_LOADER\r\n      });\r\n    }\r\n    )\r\n    .catch(err=>{console.log(err)\r\n      dispatch({\r\n        type: SET_LOADER\r\n      });\r\n    })\r\n}\r\n\r\nexport const tokenConfig = (getState, payload) => {\r\n  // Get token from state\r\n  const token = getState().auth.token;\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    params:null,\r\n  };\r\n\r\n  // If token, add to headers config\r\n  if (token) {\r\n    config.headers['Authorization'] = `Token ${token}`;\r\n  }\r\n\r\n  if (payload)\r\n  {\r\n    config.params = payload;\r\n  }\r\n  return config;\r\n};\r\n\r\nexport const changeProfilePic = (uri) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: SET_LOADER\r\n  });\r\n  \r\n  const token = getState().auth.token;\r\n\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n    },\r\n  };\r\n\r\n  if (token) {\r\n    config.headers['Authorization'] = `Token ${token}`;\r\n  }\r\n\r\n  let uriParts = uri.split('.');\r\n  let fileType = uriParts[uriParts.length - 1];\r\n\r\n  let formData = new FormData();\r\n  formData.append('image', {\r\n    uri,\r\n    name: `photo.${fileType}`,\r\n    type: `image/${fileType}`,\r\n  });\r\n\r\n  axios.patch('/auth/user/', formData, config)\r\n    .then(response => {\r\n      dispatch({\r\n        type: CHANGE_PROFILE_PIC,\r\n        payload: response.data\r\n      });\r\n      dispatch({\r\n        type: SET_LOADER\r\n      });\r\n    })\r\n    .catch(error => {console.log(error);\r\n      dispatch({\r\n        type: SET_LOADER\r\n      });\r\n    })    \r\n} \r\n\r\n\r\nexport const otpGen = () => (dispatch, getState) => {\r\n\r\n  axios.get('/api/otp/', tokenConfig(getState))\r\n  .then(response => {\r\n    dispatch({\r\n      type: SET_MESSAGE,\r\n      payload: response.data['status']\r\n    })\r\n  })\r\n  .catch(err => console.log(err))\r\n\r\n}\r\n\r\nexport const ckOTP = (payload) => (dispatch, getState) => {\r\n\r\n  axios.post('/api/otp/', payload, tokenConfig(getState))\r\n  .then(response => {\r\n    if(response.data['status'] === \"success\")\r\n    {\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: \"Phone verified\"\r\n      })\r\n      dispatch({\r\n        type: CHANGE_STATE\r\n      })\r\n    }\r\n    else{\r\n      dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: \"WRONG OTP\"\r\n      })\r\n    }\r\n  })\r\n  .catch(error => console.log(error))  \r\n\r\n}"]},"metadata":{},"sourceType":"module"}