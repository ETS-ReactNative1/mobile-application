{"ast":null,"code":"import { GET_WEBS, ADD_WEB, GET_WEB_DETAILS, REMOVE_WEB_DETAILS, SET_LOADER, GET_ERRORS, SET_MESSAGE } from \"./types\";\nimport { tokenConfig } from \"./auth\";\nimport axios from 'axios';\nexport var getItems = function getItems() {\n  return function (dispatch, getState) {\n    axios.get('/api/webs/', tokenConfig(getState)).then(function (res) {\n      dispatch({\n        type: GET_WEBS,\n        payload: res.data\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var getWebDetails = function getWebDetails(webName) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: SET_LOADER\n    });\n    var payload = {\n      web_url: webName\n    };\n    axios.get('/api/webs-post/', tokenConfig(getState, payload)).then(function (response) {\n      dispatch({\n        type: GET_WEB_DETAILS,\n        payload: response.data\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var removeWebDetails = function removeWebDetails() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: REMOVE_WEB_DETAILS\n    });\n  };\n};\nexport var addWeb = function addWeb(payload) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: SET_LOADER\n    });\n    axios.post('/api/add-web/', payload, tokenConfig(getState)).then(function (response) {\n      dispatch({\n        type: ADD_WEB,\n        payload: response.data\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n      dispatch({\n        type: SET_MESSAGE,\n        payload: 'WEBSITE ADDED'\n      });\n    }).catch(function (err) {\n      var error = {\n        msg: err.response.data,\n        status: err.response.status\n      };\n      console.log(error);\n      dispatch({\n        type: GET_ERRORS,\n        payload: error\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/anthi/Documents/GitHub/cap/redux/actions/webs.js"],"names":["GET_WEBS","ADD_WEB","GET_WEB_DETAILS","REMOVE_WEB_DETAILS","SET_LOADER","GET_ERRORS","SET_MESSAGE","tokenConfig","axios","getItems","dispatch","getState","get","then","res","type","payload","data","catch","error","console","log","getWebDetails","webName","web_url","response","removeWebDetails","addWeb","post","err","msg","status"],"mappings":"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","sourcesContent":["import { GET_WEBS, ADD_WEB, GET_WEB_DETAILS, REMOVE_WEB_DETAILS, SET_LOADER, GET_ERRORS, SET_MESSAGE } from './types';\r\nimport {tokenConfig} from './auth';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const getItems = () => (dispatch, getState) =>\r\n{\r\n    axios\r\n    .get('/api/webs/', tokenConfig(getState))\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_WEBS,\r\n            payload: res.data\r\n        });\r\n    })\r\n    .catch(error =>  console.log(error)) \r\n\r\n}\r\n\r\nexport const getWebDetails = (webName) => (dispatch, getState) =>\r\n{\r\n    dispatch({\r\n        type: SET_LOADER\r\n      });\r\n    const payload = { web_url : webName}\r\n    axios\r\n    .get('/api/webs-post/', tokenConfig(getState, payload))\r\n    .then(response => {\r\n        dispatch({\r\n            type: GET_WEB_DETAILS,\r\n            payload: response.data\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER\r\n          });\r\n\r\n    })\r\n    .catch(error => console.log(error))\r\n}\r\n\r\nexport const removeWebDetails = () => (dispatch, getState) =>\r\n{\r\n    dispatch({\r\n        type: REMOVE_WEB_DETAILS\r\n    })\r\n}\r\n\r\nexport const addWeb = (payload) => (dispatch, getState) =>\r\n{\r\n\r\n    dispatch({\r\n        type: SET_LOADER\r\n      });\r\n\r\naxios.post('/api/add-web/', payload, tokenConfig(getState))\r\n.then(response => {\r\n    dispatch({\r\n        type: ADD_WEB,\r\n        payload: response.data\r\n    });\r\n    dispatch({\r\n        type: SET_LOADER\r\n      });\r\n    dispatch({\r\n        type: SET_MESSAGE,\r\n        payload: 'WEBSITE ADDED'\r\n    })\r\n})\r\n.catch(err => {\r\n    const error ={\r\n        msg: err.response.data,\r\n        status: err.response.status\r\n      };\r\n      console.log(error)\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error\r\n      });\r\n      dispatch({\r\n        type: SET_LOADER\r\n      });\r\n})\r\n}"]},"metadata":{},"sourceType":"module"}