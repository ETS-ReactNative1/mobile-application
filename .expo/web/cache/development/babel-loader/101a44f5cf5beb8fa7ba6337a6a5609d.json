{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anthi\\\\Documents\\\\GitHub\\\\cap\\\\screens\\\\secondary\\\\ProfileScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Avatar, Text } from 'react-native-elements';\nimport Colors from \"../../constants/Colors\";\nimport Fonts from \"../../constants/Fonts\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Layout from \"../../constants/Layout\";\nimport { roundToTwo } from \"../../constants/Utils\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport CustomModal from \"../../components/CustomModal\";\nimport Menu from \"../../components/Menu\";\nimport { getProfile, removeProfile } from \"../../redux/actions/profiles\";\nimport { vibratePhone } from \"../../constants/Utils\";\nvar _Layout$window = Layout.window,\n    width = _Layout$window.width,\n    height = _Layout$window.height;\n\nvar UserScreen = function UserScreen(props) {\n  var user_id = props.route.params.user_id;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(getProfile(user_id));\n    return function () {\n      dispatch(removeProfile());\n    };\n  }, []);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      item = _useState2[0],\n      setItem = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fullView = _useState4[0],\n      setFullView = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      seeOptions = _useState6[0],\n      setSeeOptions = _useState6[1];\n\n  var close_modal = function close_modal() {\n    setSeeOptions(false);\n  };\n\n  var posts = useSelector(function (state) {\n    return state.profile.posts;\n  });\n  var user = useSelector(function (state) {\n    return state.profile.user;\n  });\n  var count = useSelector(function (state) {\n    return state.profile.count;\n  });\n  var likes = useSelector(function (state) {\n    return state.profile.likes;\n  });\n  var navigation = props.navigation;\n\n  if (!user) {\n    return null;\n  }\n\n  navigation.setOptions({\n    headerTitle: user.name.toUpperCase().split(' ').map(function (i) {\n      return i.charAt(0);\n    }),\n    headerStyle: {\n      backgroundColor: '#000000'\n    },\n    headerTitleStyle: {\n      color: Colors.content,\n      fontFamily: Fonts.logo,\n      fontSize: 25\n    },\n    headerTintColor: Colors.content\n  });\n\n  var redirect = function redirect(wURL, user) {\n    setFullView(false);\n    setSeeOptions(false);\n\n    if (wURL) {\n      navigation.navigate('Website', {\n        webName: wURL\n      });\n    } else {\n      navigation.navigate('Website', {\n        user_id: user\n      });\n    }\n  };\n\n  return React.createElement(LinearGradient, {\n    style: {\n      flex: 1\n    },\n    colors: Colors.userGradient,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(CustomModal, {\n    item: item,\n    isVisible: fullView,\n    onBackButtonPress: function onBackButtonPress() {\n      setFullView(false);\n    },\n    onBackdropPress: function onBackdropPress() {\n      setFullView(false);\n    },\n    redirect: redirect,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(Menu, {\n    item: item,\n    cm: close_modal,\n    isVisible: seeOptions,\n    onBackButtonPress: function onBackButtonPress() {\n      setSeeOptions(false);\n    },\n    onBackdropPress: function onBackdropPress() {\n      setSeeOptions(false);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.user,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.pic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, React.createElement(Avatar, {\n    source: {\n      uri: user.image\n    },\n    showEditButton: true,\n    rounded: true,\n    size: \"large\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.info,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.name_text,\n    numberOfLines: 1,\n    ellipsizeMode: \"tail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, user.name)), React.createElement(View, {\n    style: styles.count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: styles.c,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.subtext,\n    numberOfLines: 1,\n    ellipsizeMode: \"tail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }\n  }, count ? count : 0), React.createElement(Text, {\n    style: styles.subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Posts\")), React.createElement(View, {\n    style: styles.c,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: styles.subtext,\n    numberOfLines: 1,\n    ellipsizeMode: \"tail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, likes ? likes : 0), React.createElement(Text, {\n    style: styles.subtext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Likes\"))))), React.createElement(View, {\n    style: styles.additional,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.subtext,\n    numberOfLines: 1,\n    ellipsizeMode: \"tail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Born on: \", user.dob), React.createElement(Text, {\n    style: styles.subtext,\n    numberOfLines: 1,\n    ellipsizeMode: \"tail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Member since: \", user.date_joined.slice(0, 10))), React.createElement(View, {\n    style: styles.posts,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: posts,\n    numColumns: 2,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          setItem(item);\n          setFullView(true);\n        },\n        onLongPress: function onLongPress() {\n          setItem(item);\n          setSeeOptions(true);\n          vibratePhone(100);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 18\n        }\n      }, React.createElement(View, {\n        style: styles.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: styles.web_name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        numberOfLines: 1,\n        ellipsizeMode: \"tail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 29\n        }\n      }, item.web_url)), React.createElement(View, {\n        style: styles.rating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 29\n        }\n      }, roundToTwo(item.total_rating_value)))));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.post_id;\n    },\n    contentContainerStyle: {\n      flexDirection: 'column'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default UserScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: \"center\"\n  },\n  card: {\n    width: width * 0.42,\n    height: height * 0.12,\n    borderRadius: 5,\n    backgroundColor: Colors.background,\n    margin: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignContent: 'center',\n    overflow: 'hidden',\n    padding: 5\n  },\n  web_name: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  rating: {\n    flex: 0.5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  title: {\n    color: Colors.content,\n    fontSize: 13,\n    fontFamily: Fonts.text\n  },\n  user: {\n    flex: 0.2,\n    flexDirection: 'row'\n  },\n  posts: {\n    flex: 0.7,\n    alignItems: 'center'\n  },\n  additional: {\n    flex: 0.1,\n    alignItems: 'center',\n    justifyContent: 'space-evenly',\n    flexDirection: 'row'\n  },\n  pic: {\n    flex: 0.3,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  info: {\n    flex: 0.7,\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  name_text: {\n    color: Colors.content,\n    fontSize: 20\n  },\n  count: {\n    flexDirection: 'row'\n  },\n  c: {\n    flex: 0.5,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  subtext: {\n    color: Colors.content,\n    fontSize: 15\n  },\n  value: {\n    color: Colors.textMuted\n  }\n});","map":{"version":3,"sources":["C:/Users/anthi/Documents/GitHub/cap/screens/secondary/ProfileScreen.js"],"names":["React","useEffect","useState","Avatar","Text","Colors","Fonts","useDispatch","useSelector","Layout","roundToTwo","LinearGradient","CustomModal","Menu","getProfile","removeProfile","vibratePhone","window","width","height","UserScreen","props","user_id","route","params","dispatch","item","setItem","fullView","setFullView","seeOptions","setSeeOptions","close_modal","posts","state","profile","user","count","likes","navigation","setOptions","headerTitle","name","toUpperCase","split","map","i","charAt","headerStyle","backgroundColor","headerTitleStyle","color","content","fontFamily","logo","fontSize","headerTintColor","redirect","wURL","navigate","webName","flex","userGradient","styles","pic","uri","image","info","name_text","c","subtext","additional","dob","date_joined","slice","card","web_name","title","web_url","rating","value","total_rating_value","post_id","flexDirection","StyleSheet","create","container","flexWrap","justifyContent","borderRadius","background","margin","alignItems","alignContent","overflow","padding","text","textMuted"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, View, TouchableOpacity, FlatList } from 'react-native';\r\nimport { Avatar, Text } from 'react-native-elements';\r\nimport Colors from '../../constants/Colors';\r\nimport Fonts from '../../constants/Fonts';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Layout from '../../constants/Layout';\r\nimport { roundToTwo } from '../../constants/Utils';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport CustomModal from '../../components/CustomModal';\r\nimport Menu from '../../components/Menu';\r\nimport { getProfile, removeProfile } from '../../redux/actions/profiles'\r\nimport { vibratePhone } from '../../constants/Utils'\r\n\r\nconst { width, height } = Layout.window\r\n\r\nconst UserScreen = (props) => {\r\n\r\n    const user_id = props.route.params.user_id\r\n    const dispatch = useDispatch()\r\n    \r\n    useEffect(()=>{\r\n\r\n        dispatch(getProfile(user_id))\r\n\r\n        return () => {\r\n            dispatch(removeProfile())\r\n        }\r\n\r\n    },[])\r\n\r\n    const [item, setItem] = useState(null)\r\n    const [fullView, setFullView] = useState(false)\r\n    const [seeOptions, setSeeOptions] = useState(false)\r\n    const close_modal = () => {setSeeOptions(false)}\r\n    const posts = useSelector(state => state.profile.posts)\r\n    const user = useSelector(state => state.profile.user)\r\n    const count = useSelector(state => state.profile.count)\r\n    const likes = useSelector(state => state.profile.likes)\r\n    const {navigation} = props\r\n    if(!user){\r\n        return null\r\n    }\r\n\r\n    navigation.setOptions({ headerTitle: user.name.toUpperCase().split(' ').map(i => i.charAt(0)), headerStyle: {backgroundColor: '#000000'}, \r\n    headerTitleStyle: { color: Colors.content, fontFamily: Fonts.logo, fontSize: 25 }, \r\n    headerTintColor: Colors.content});\r\n\r\n    \r\n    const redirect = (wURL, user) => {\r\n        setFullView(false)\r\n        setSeeOptions(false)\r\n        if(wURL)\r\n        {navigation.navigate('Website', {webName:wURL})}\r\n        else\r\n        {navigation.navigate('Website', {user_id:user})}\r\n    }\r\n\r\n    return (\r\n        <LinearGradient style={{flex:1}} colors={Colors.userGradient}>\r\n        <CustomModal \r\n        item={item} \r\n        isVisible={fullView} \r\n        onBackButtonPress={()=>{setFullView(false)}} \r\n        onBackdropPress={()=>{setFullView(false)}} \r\n        redirect={redirect}\r\n        />\r\n        <Menu \r\n        item={item}\r\n        cm={close_modal}\r\n        isVisible={seeOptions}\r\n        onBackButtonPress={()=>{setSeeOptions(false)}} \r\n        onBackdropPress={()=>{setSeeOptions(false)}} \r\n        />\r\n        <View style={styles.user}>\r\n            <View style={styles.pic}>\r\n            <Avatar\r\n                source={{\r\n                    uri: user.image,\r\n                }}\r\n                showEditButton\r\n                rounded\r\n                size=\"large\"\r\n            />\r\n            </View>\r\n            <View style={styles.info}>\r\n                <View style={styles.name}>\r\n                    <Text style={styles.name_text} numberOfLines={1} ellipsizeMode='tail'>{user.name}</Text>\r\n                </View>\r\n                <View style={styles.count}>\r\n                    <View style={styles.c}>\r\n                    <Text style={styles.subtext} numberOfLines={1} ellipsizeMode='tail'>{count? count: 0}</Text>\r\n                    <Text style={styles.subtext}>Posts</Text>\r\n                    </View>\r\n                    <View style={styles.c}>\r\n                    <Text style={styles.subtext} numberOfLines={1} ellipsizeMode='tail'>{likes? likes:0}</Text>\r\n                    <Text style={styles.subtext}>Likes</Text>\r\n                    </View>\r\n                </View>\r\n            </View>\r\n        </View>\r\n        <View style={styles.additional}>\r\n            <Text style={styles.subtext} numberOfLines={1} ellipsizeMode='tail'>Born on: {user.dob}</Text>\r\n            <Text style={styles.subtext} numberOfLines={1} ellipsizeMode='tail'>Member since: {user.date_joined.slice(0,10)}</Text>\r\n        </View>\r\n        <View style={styles.posts}>\r\n        \r\n        \r\n        <FlatList data={posts} numColumns={2}\r\n                renderItem={({item})=>(\r\n                 <TouchableOpacity onPress={()=>{ setItem(item); setFullView(true); }} onLongPress={()=>{ setItem(item); setSeeOptions(true); vibratePhone(100);}}>\r\n                    <View style={styles.card} >\r\n                        <View style={styles.web_name}>\r\n                            <Text style={styles.title} numberOfLines={1} ellipsizeMode='tail'>{item.web_url}</Text>\r\n                        </View>\r\n                        <View style={styles.rating}>\r\n                            <Text style={styles.value}>{roundToTwo(item.total_rating_value)}</Text>\r\n                        </View>\r\n                    </View>\r\n                </TouchableOpacity>\r\n                )}\r\n                keyExtractor={item => item.post_id}\r\n                contentContainerStyle={{flexDirection: 'column'}}\r\n                \r\n        />       \r\n        \r\n        </View>\r\n        </LinearGradient>\r\n    )\r\n}\r\n\r\nexport default UserScreen\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      flexDirection: 'row',\r\n      flexWrap: 'wrap',\r\n      justifyContent: \"center\",\r\n    },\r\n    card: {\r\n       width: width*0.42,\r\n       height: height*0.12,\r\n       borderRadius: 5,\r\n       backgroundColor: Colors.background,\r\n       margin: 10,\r\n       alignItems: 'center',\r\n       justifyContent: 'center',\r\n       alignContent: 'center',\r\n       overflow: 'hidden',\r\n       padding:5\r\n    },\r\n    web_name: {\r\n        flex:0.5,\r\n        alignItems: 'center',\r\n       justifyContent: 'center',\r\n    },\r\n    rating: {\r\n        flex:0.5,\r\n        alignItems: 'center',\r\n       justifyContent: 'center',\r\n    },\r\n    title: {\r\n        color:Colors.content,\r\n        fontSize: 13,\r\n        fontFamily: Fonts.text\r\n    },\r\n    user:{\r\n        flex:0.2,\r\n        flexDirection: 'row'\r\n    },\r\n    posts:{\r\n        flex:0.7,\r\n        alignItems: 'center',\r\n    },\r\n    additional:{\r\n        flex: 0.1,\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly',\r\n        flexDirection: 'row',\r\n    },\r\n    pic: {\r\n        flex: 0.3,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n    info:{\r\n        flex:0.7,\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n    name_text: {\r\n        color:Colors.content,\r\n        fontSize: 20,\r\n    },\r\n    count : {\r\n        flexDirection: 'row'\r\n    },\r\n    c: {\r\n        flex:0.5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    subtext:{\r\n        color:Colors.content,\r\n        fontSize: 15,\r\n    },\r\n    value: {\r\n        color: Colors.textMuted,\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}