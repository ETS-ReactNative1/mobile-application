{"ast":null,"code":"import axios from 'axios';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, GET_ERRORS, GET_MESSAGES, SET_LOADER } from \"./types\";\nimport { tokenConfig } from \"./auth\";\nexport var getItems = function getItems() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: SET_LOADER\n    });\n    axios.get('/api/posts/', tokenConfig(getState)).then(function (res) {\n      dispatch({\n        type: GET_ITEMS,\n        payload: res.data\n      });\n      console.log(res.data);\n      dispatch({\n        type: SET_LOADER\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};\nexport var addItem = function addItem(payload) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: SET_LOADER\n    });\n    axios.post('/api/posts/', payload, tokenConfig(getState)).then(function (res) {\n      dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n      });\n      dispatch({\n        type: GET_MESSAGES,\n        payload: \"ITEM ADDED\"\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    }).catch(function (err) {\n      var errors = {\n        msg: err.response.data,\n        status: err.response.status\n      };\n      console.log(err.response.data);\n      dispatch({\n        type: GET_ERRORS,\n        payload: errors\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    });\n  };\n};\nexport var deleteItem = function deleteItem(id) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: SET_LOADER\n    });\n    axios.delete(\"/api/posts/\" + id + \"/\", tokenConfig(getState)).then(function (res) {\n      dispatch({\n        type: DELETE_ITEM,\n        payload: id\n      });\n      dispatch({\n        type: GET_MESSAGES,\n        payload: \"ITEM DELETED\"\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    }).catch(function (err) {\n      return console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/anthi/Documents/conmeter/conmeter/redux/actions/items.js"],"names":["axios","GET_ITEMS","ADD_ITEM","DELETE_ITEM","GET_ERRORS","GET_MESSAGES","SET_LOADER","tokenConfig","getItems","dispatch","getState","type","get","then","res","payload","data","console","log","catch","err","addItem","post","errors","msg","response","status","deleteItem","id","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, GET_ERRORS, GET_MESSAGES, SET_LOADER } from './types';\r\nimport { tokenConfig } from './auth';\r\n\r\n\r\n// GET ITEMS\r\n\r\nexport const getItems = () => (dispatch, getState) =>{\r\n    dispatch({\r\n        type: SET_LOADER\r\n      });\r\naxios.get('/api/posts/', tokenConfig(getState))\r\n    .then(res=>\r\n        {\r\n            dispatch({\r\n                type: GET_ITEMS,\r\n                payload: res.data\r\n            });\r\n            console.log(res.data)\r\n            dispatch({\r\n                type: SET_LOADER\r\n              });\r\n        })\r\n    .catch(err => console.log(err))\r\n}\r\n\r\n// ADD ITEM\r\n\r\nexport const addItem = (payload) => (dispatch, getState) =>{\r\n    \r\n\r\n      dispatch({\r\n        type: SET_LOADER\r\n      });\r\naxios.post('/api/posts/', payload, tokenConfig(getState))\r\n    .then(res=>\r\n        {\r\n            dispatch({\r\n                type: ADD_ITEM,\r\n                payload: res.data\r\n            });\r\n\r\n            dispatch({\r\n                type: GET_MESSAGES,\r\n                payload: \"ITEM ADDED\"\r\n            });\r\n            dispatch({\r\n                type: SET_LOADER\r\n              });\r\n        })\r\n    .catch(err => {\r\n        const errors = {\r\n        msg: err.response.data,\r\n        status: err.response.status\r\n    }\r\n    console.log(err.response.data)\r\n    dispatch({\r\n        type: GET_ERRORS,\r\n        payload: errors\r\n    });\r\n    dispatch({\r\n        type: SET_LOADER\r\n      });\r\n}\r\n    )\r\n}\r\n\r\n// DELETE ITEM\r\n\r\nexport const deleteItem = (id) => (dispatch, getState) =>{\r\n\r\n    dispatch({\r\n        type: SET_LOADER\r\n      });\r\naxios.delete(`/api/posts/${id}/`, tokenConfig(getState))\r\n    .then(res=>\r\n        {\r\n            dispatch({\r\n                type: DELETE_ITEM,\r\n                payload: id\r\n            });\r\n\r\n            dispatch({\r\n                type: GET_MESSAGES,\r\n                payload: \"ITEM DELETED\"\r\n            });\r\n\r\n            dispatch({\r\n                type: SET_LOADER\r\n              });\r\n        })\r\n    .catch(err => console.log(err))\r\n}"]},"metadata":{},"sourceType":"module"}