{"ast":null,"code":"import { GET_COUNT, GET_LIKES, INCREMENT_COUNT, GET_TOPS, GET_NOTIFICATIONS, SET_MESSAGE, SET_LOADER } from \"./types\";\nimport { tokenConfig } from \"./auth\";\nimport axios from 'axios';\nexport var getCount = function getCount() {\n  return function (dispatch, getState) {\n    axios.get('/api/me-count/', tokenConfig(getState)).then(function (response) {\n      dispatch({\n        type: GET_COUNT,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var getLikes = function getLikes() {\n  return function (dispatch, getState) {\n    axios.get('/api/me-like/', tokenConfig(getState)).then(function (response) {\n      dispatch({\n        type: GET_LIKES,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var addCount = function addCount() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: INCREMENT_COUNT\n    });\n  };\n};\nexport var getTops = function getTops() {\n  return function (dispatch, getState) {\n    axios.get('/api/tops/', tokenConfig(getState)).then(function (response) {\n      dispatch({\n        type: GET_TOPS,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var getNotifications = function getNotifications() {\n  return function (dispatch, getState) {\n    axios.get('/api/get-notifications/', tokenConfig(getState)).then(function (response) {\n      dispatch({\n        type: GET_NOTIFICATIONS,\n        payload: response.data\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var addReport = function addReport(payload) {\n  return function (dispatch, getState) {\n    dispatch({\n      type: SET_LOADER\n    });\n    axios.post('/api/issue/', payload, tokenConfig(getState)).then(function (res) {\n      dispatch({\n        type: SET_MESSAGE,\n        payload: 'REPORTED'\n      });\n      dispatch({\n        type: SET_LOADER\n      });\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};\nexport var setLoader = function setLoader() {\n  return function (dispatch) {\n    dispatch({\n      type: SET_LOADER\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/anthi/Documents/GitHub/cap/redux/actions/mis.js"],"names":["GET_COUNT","GET_LIKES","INCREMENT_COUNT","GET_TOPS","GET_NOTIFICATIONS","SET_MESSAGE","SET_LOADER","tokenConfig","axios","getCount","dispatch","getState","get","then","response","type","payload","data","catch","error","console","log","getLikes","addCount","getTops","getNotifications","addReport","post","res","setLoader"],"mappings":"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","sourcesContent":["import { GET_COUNT, GET_LIKES, INCREMENT_COUNT, GET_TOPS, GET_NOTIFICATIONS, SET_MESSAGE, SET_LOADER } from './types';\r\nimport {tokenConfig} from './auth'\r\nimport axios from 'axios'\r\n\r\nexport const getCount = () => (dispatch, getState) =>{\r\n    axios\r\n        .get('/api/me-count/', tokenConfig(getState))\r\n        .then(response => {\r\n            dispatch({\r\n                type: GET_COUNT,\r\n                payload: response.data\r\n            });\r\n        })\r\n        .catch(error =>  console.log(error))  \r\n}\r\n\r\nexport const getLikes = () => (dispatch, getState) =>{\r\n    axios\r\n        .get('/api/me-like/', tokenConfig(getState))\r\n        .then(response => {\r\n            dispatch({\r\n                type: GET_LIKES,\r\n                payload: response.data\r\n            });\r\n        })\r\n        .catch(error =>  console.log(error))  \r\n}\r\n\r\nexport const addCount = () => (dispatch, getState) => {\r\n    dispatch({\r\n        type: INCREMENT_COUNT\r\n    })\r\n}\r\n\r\n\r\nexport const getTops = () => (dispatch, getState) => {\r\n    axios\r\n    .get('/api/tops/', tokenConfig(getState))\r\n    .then(response => {\r\n        dispatch({\r\n            type: GET_TOPS,\r\n            payload: response.data\r\n        })\r\n    })\r\n    .catch(error =>  console.log(error))\r\n}\r\n\r\nexport const getNotifications = () => (dispatch, getState) => {\r\n    axios\r\n    .get('/api/get-notifications/', tokenConfig(getState))\r\n    .then(response => {\r\n        dispatch({\r\n            type: GET_NOTIFICATIONS,\r\n            payload: response.data\r\n        });\r\n    })\r\n    .catch(error =>  console.log(error))\r\n\r\n}\r\n\r\nexport const addReport = (payload) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: SET_LOADER\r\n      });\r\n    axios\r\n    .post('/api/issue/', payload, tokenConfig(getState))\r\n    .then(res => {\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: 'REPORTED'\r\n        });\r\n        dispatch({\r\n            type: SET_LOADER\r\n          });\r\n    })\r\n    .catch(error => console.log(error))\r\n}\r\n\r\nexport const setLoader = () => (dispatch) =>{\r\n    dispatch({\r\n        type: SET_LOADER\r\n      });\r\n}"]},"metadata":{},"sourceType":"module"}