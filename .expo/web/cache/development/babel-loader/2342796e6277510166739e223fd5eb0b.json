{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anthi\\\\Documents\\\\GitHub\\\\cap\\\\screens\\\\ExploreScreen.js\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Colors from \"../constants/Colors\";\nimport { Text, SearchBar, Card, ListItem } from 'react-native-elements';\nimport { useSelector } from 'react-redux';\nimport Layout from \"../constants/Layout\";\nimport Loader from \"../components/Loader\";\nimport Message from \"../components/Message\";\nvar _Layout$window = Layout.window,\n    width = _Layout$window.width,\n    height = _Layout$window.height;\n\nvar ExploreScreen = function ExploreScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var oList = useSelector(function (state) {\n    return state.webs.items;\n  });\n\n  var _useState3 = useState(useSelector(function (state) {\n    return state.webs.items;\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      webs = _useState4[0],\n      setWebs = _useState4[1];\n\n  var navigation = props.navigation;\n\n  var filter_view = function filter_view(text) {\n    var newList = oList.filter(function (web) {\n      return web.url.toLowerCase().indexOf(text.toLowerCase()) > -1 || web.name.toLowerCase().indexOf(text.toLowerCase()) > -1;\n    });\n    setWebs(newList);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, React.createElement(SearchBar, {\n    placeholder: \"Search\",\n    onChangeText: function onChangeText(text) {\n      setSearch(text);\n      filter_view(text);\n    },\n    value: search,\n    containerStyle: styles.search,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    data: webs,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Card, {\n        containerStyle: styles.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 29\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          navigation.navigate('Website', {\n            webName: item.url\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, React.createElement(ListItem, {\n        key: item.url,\n        title: item.url,\n        containerStyle: {\n          backgroundColor: Colors.base,\n          borderWidth: 1,\n          borderColor: Colors.border,\n          borderRadius: 10\n        },\n        titleStyle: {\n          color: Colors.content\n        },\n        chevron: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      })));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.url;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      navigation.navigate('New');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, React.createElement(Card, {\n    containerStyle: styles.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, React.createElement(ListItem, {\n    key: \"no_result\",\n    title: \"No finding what you are looking for? Add it here.\",\n    containerStyle: {\n      backgroundColor: Colors.base,\n      borderWidth: 1,\n      borderColor: Colors.border,\n      borderRadius: 10\n    },\n    titleStyle: {\n      color: Colors.content\n    },\n    chevron: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  })))), React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 1\n    }\n  }), React.createElement(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 1\n    }\n  }));\n};\n\nexport default ExploreScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: Colors.background\n  },\n  card: {\n    padding: 0,\n    borderWidth: 0,\n    borderRadius: 10,\n    backgroundColor: \"transparent\"\n  },\n  search: {\n    backgroundColor: Colors.background\n  }\n});","map":{"version":3,"sources":["C:/Users/anthi/Documents/GitHub/cap/screens/ExploreScreen.js"],"names":["React","useState","Colors","Text","SearchBar","Card","ListItem","useSelector","Layout","Loader","Message","window","width","height","ExploreScreen","props","search","setSearch","oList","state","webs","items","setWebs","navigation","filter_view","text","newList","filter","web","url","toLowerCase","indexOf","name","styles","container","item","card","navigate","webName","backgroundColor","base","borderWidth","borderColor","border","borderRadius","color","content","StyleSheet","create","flex","background","padding"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, View , FlatList, TouchableOpacity } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport { Text, SearchBar, Card, ListItem } from 'react-native-elements';\r\nimport { useSelector } from 'react-redux';\r\nimport Layout from '../constants/Layout';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nconst { width, height } = Layout.window\r\nconst ExploreScreen = (props) => {\r\n    const [search, setSearch] = useState('')\r\n    const oList = useSelector(state=>state.webs.items)\r\n    const [webs, setWebs] = useState(useSelector(state=>state.webs.items))\r\n    const { navigation } = props\r\n    const filter_view = (text) =>\r\n    {\r\n        let newList = oList.filter(web => web.url.toLowerCase().indexOf(text.toLowerCase()) > -1 || web.name.toLowerCase().indexOf(text.toLowerCase()) > -1);\r\n        setWebs(newList);\r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <View>\r\n            <SearchBar placeholder=\"Search\" onChangeText={(text)=>{setSearch(text); filter_view(text);}} value={search} containerStyle={styles.search}/>\r\n            </View>\r\n            <View>\r\n                <FlatList\r\n                    data={webs}\r\n                    renderItem={\r\n                        ({item}) => (\r\n                            <Card containerStyle={styles.card} >\r\n            <TouchableOpacity onPress={ () => { navigation.navigate('Website', {webName:item.url}) }}>\r\n                    <ListItem\r\n                        key={item.url}\r\n                        title={item.url}\r\n                        containerStyle={{backgroundColor: Colors.base, borderWidth: 1, borderColor: Colors.border, borderRadius: 10}}\r\n                        titleStyle={{color: Colors.content}}\r\n                        chevron\r\n                    />\r\n           </TouchableOpacity>\r\n           </Card>\r\n                        )\r\n                    }\r\n                    keyExtractor={item => item.url}\r\n                />\r\n            </View>\r\n            <View>\r\n            <TouchableOpacity onPress={ () => { navigation.navigate('New') }}>\r\n            <Card containerStyle={styles.card}>\r\n            <ListItem\r\n                key={\"no_result\"}\r\n                title=\"No finding what you are looking for? Add it here.\"\r\n                containerStyle={{backgroundColor: Colors.base, borderWidth: 1, borderColor: Colors.border, borderRadius: 10}}\r\n                titleStyle={{color: Colors.content}}\r\n                chevron\r\n            />\r\n            </Card>\r\n            </TouchableOpacity>\r\n            </View>\r\n<Loader />\r\n<Message />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default ExploreScreen\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      flex: 1,\r\n      backgroundColor: Colors.background,\r\n    },\r\n    card: {\r\n        padding: 0,\r\n        borderWidth: 0,\r\n        borderRadius: 10,\r\n        backgroundColor: \"transparent\"\r\n      },\r\n    search:{\r\n        backgroundColor: Colors.background,\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}