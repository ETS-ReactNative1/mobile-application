{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\anthi\\\\Documents\\\\GitHub\\\\cap\\\\screens\\\\auth\\\\Register.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { Text, Button } from 'react-native-elements';\nimport Colors from \"../../constants/Colors\";\nimport Fonts from \"../../constants/Fonts\";\nimport Layout from \"../../constants/Layout\";\nimport Alerts from \"../../components/Alerts\";\nimport Loader from \"../../components/Loader\";\nimport Message from \"../../components/Message\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reg } from \"../../redux/actions/auth\";\nvar _Layout$window = Layout.window,\n    width = _Layout$window.width,\n    height = _Layout$window.height;\n\nvar Register = function Register(props) {\n  var navigation = props.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      passwordDuplicate = _useState10[0],\n      setPasswordDuplicate = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      dob = _useState12[0],\n      setDOB = _useState12[1];\n\n  var dispatch = useDispatch();\n  var reg_ck = useSelector(function (state) {\n    return state.auth.reg;\n  });\n  navigation.setOptions({\n    headerTitle: 'REGISTER',\n    headerStyle: {\n      backgroundColor: '#000000'\n    },\n    headerTitleStyle: {\n      color: Colors.content,\n      fontFamily: Fonts.logo,\n      fontSize: 25\n    },\n    headerTintColor: Colors.content\n  });\n\n  if (reg_ck) {\n    navigation.navigate('OTP');\n  }\n\n  var onSubmitPressed = function onSubmitPressed() {\n    var payload = {\n      name: name,\n      email: email,\n      password: password,\n      phone: phone,\n      dob: dob\n    };\n    dispatch(reg(payload));\n  };\n\n  return React.createElement(View, {\n    style: styles.main,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.logo_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"CM\")), React.createElement(View, {\n    style: styles.text_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Name\",\n    onChangeText: function onChangeText(text) {\n      setName(text);\n    },\n    value: name,\n    autoCorrect: false,\n    enablesReturnKeyAutomatically: true,\n    keyboardAppearance: 'dark',\n    returnKeyType: \"next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.text_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(text) {\n      setEmail(text);\n    },\n    value: email,\n    autoCorrect: false,\n    enablesReturnKeyAutomatically: true,\n    keyboardAppearance: 'dark',\n    keyboardType: \"email-address\",\n    returnKeyType: \"next\",\n    autoCapitalize: 'none',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.text_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Phone Number\",\n    onChangeText: function onChangeText(text) {\n      setPhone(text);\n    },\n    value: phone,\n    autoCorrect: false,\n    enablesReturnKeyAutomatically: true,\n    keyboardAppearance: 'dark',\n    keyboardType: \"phone-pad\",\n    returnKeyType: \"next\",\n    autoCapitalize: 'none',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.text_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(text) {\n      setPassword(text);\n    },\n    value: password,\n    autoCorrect: false,\n    enablesReturnKeyAutomatically: true,\n    keyboardAppearance: 'dark',\n    secureTextEntry: true,\n    returnKeyType: \"next\",\n    autoCapitalize: 'none',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.text_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Confirm password\",\n    onChangeText: function onChangeText(text) {\n      setPasswordDuplicate(text);\n    },\n    value: passwordDuplicate,\n    autoCorrect: false,\n    enablesReturnKeyAutomatically: true,\n    keyboardAppearance: 'dark',\n    secureTextEntry: true,\n    returnKeyType: \"next\",\n    autoCapitalize: 'none',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.text_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Enter DOB (YYYY-MM-DD)\",\n    onChangeText: function onChangeText(text) {\n      setDOB(text);\n    },\n    value: dob,\n    autoCorrect: false,\n    enablesReturnKeyAutomatically: true,\n    keyboardAppearance: 'dark',\n    returnKeyType: \"next\",\n    autoCapitalize: 'none',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.submit_area,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"REGISTER\",\n    type: \"outline\",\n    buttonStyle: {\n      borderColor: Colors.border,\n      borderWidth: 2,\n      width: width * 0.9,\n      borderRadius: 10\n    },\n    titleStyle: {\n      color: Colors.content\n    },\n    onPress: onSubmitPressed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })), React.createElement(Alerts, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), React.createElement(Loader, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 1\n    }\n  }), React.createElement(Message, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 1\n    }\n  }));\n};\n\nexport default Register;\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: Colors.background,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: Colors.border,\n    backgroundColor: Colors.base,\n    color: Colors.content,\n    borderRadius: 10,\n    height: height * 0.05,\n    width: width * 0.9,\n    padding: 10\n  },\n  text_area: {\n    padding: 10\n  },\n  submit_area: {\n    padding: 10,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  logo: {\n    color: Colors.content,\n    fontFamily: Fonts.logo,\n    textAlign: 'center',\n    fontSize: height * 0.1\n  }\n});","map":{"version":3,"sources":["C:/Users/anthi/Documents/GitHub/cap/screens/auth/Register.js"],"names":["React","useState","Text","Button","Colors","Fonts","Layout","Alerts","Loader","Message","useDispatch","useSelector","reg","window","width","height","Register","props","navigation","email","setEmail","name","setName","phone","setPhone","password","setPassword","passwordDuplicate","setPasswordDuplicate","dob","setDOB","dispatch","reg_ck","state","auth","setOptions","headerTitle","headerStyle","backgroundColor","headerTitleStyle","color","content","fontFamily","logo","fontSize","headerTintColor","navigate","onSubmitPressed","payload","styles","main","logo_area","text_area","input","text","submit_area","borderColor","border","borderWidth","borderRadius","StyleSheet","create","flex","background","justifyContent","alignItems","base","padding","textAlign"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { View, StyleSheet, TextInput } from 'react-native'\r\nimport { Text, Button } from 'react-native-elements'\r\nimport Colors from '../../constants/Colors';\r\nimport Fonts from '../../constants/Fonts';\r\nimport Layout from '../../constants/Layout';\r\nimport Alerts from '../../components/Alerts';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { reg } from '../../redux/actions/auth';\r\n\r\nconst { width, height } = Layout.window;\r\n\r\nconst Register = (props) => {\r\n\r\n\r\n\r\n\r\n    const { navigation } = props\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [passwordDuplicate, setPasswordDuplicate] = useState('')\r\n    const [dob, setDOB] = useState('')\r\n    const dispatch = useDispatch()\r\n    const reg_ck = useSelector(state => state.auth.reg)\r\n    navigation.setOptions({ headerTitle: 'REGISTER', headerStyle: {backgroundColor: '#000000'}, \r\n    headerTitleStyle: { color: Colors.content, fontFamily: Fonts.logo, fontSize: 25 }, \r\n    headerTintColor: Colors.content});\r\n\r\n    if(reg_ck){\r\n        navigation.navigate('OTP')\r\n    }\r\n\r\n    const onSubmitPressed = () => {\r\n        const payload = {name, email, password, phone, dob };\r\n        dispatch(reg(payload));\r\n    }\r\n\r\n    return (\r\n        <View style={styles.main}>\r\n            <View style={styles.logo_area}>\r\n                <Text style={styles.logo}>CM</Text>\r\n            </View>\r\n           <View style={styles.text_area}>\r\n                <TextInput \r\n                style={styles.input} \r\n                placeholder=\"Name\"\r\n                onChangeText = {(text)=>{setName(text)}}\r\n                value={name}\r\n                autoCorrect={false}\r\n                enablesReturnKeyAutomatically={true}\r\n                keyboardAppearance={'dark'}\r\n                returnKeyType={\"next\"}\r\n                />\r\n            </View>\r\n            <View style={styles.text_area}>\r\n                <TextInput \r\n                style={styles.input} \r\n                placeholder=\"Email\"\r\n                onChangeText = {(text)=>{setEmail(text)}}\r\n                value={email}\r\n                autoCorrect={false}\r\n                enablesReturnKeyAutomatically={true}\r\n                keyboardAppearance={'dark'}\r\n                keyboardType={\"email-address\"}\r\n                returnKeyType={\"next\"}\r\n                autoCapitalize={'none'}\r\n                />\r\n            </View>\r\n            <View style={styles.text_area}>\r\n                <TextInput \r\n                style={styles.input} \r\n                placeholder=\"Phone Number\"\r\n                onChangeText = {(text)=>{setPhone(text)}}\r\n                value={phone}\r\n                autoCorrect={false}\r\n                enablesReturnKeyAutomatically={true}\r\n                keyboardAppearance={'dark'}\r\n                keyboardType={\"phone-pad\"}\r\n                returnKeyType={\"next\"}\r\n                autoCapitalize={'none'}\r\n                />\r\n            </View>\r\n            <View style={styles.text_area}>\r\n                <TextInput \r\n                style={styles.input} \r\n                placeholder=\"Password\"\r\n                onChangeText = {(text)=>{setPassword(text)}}\r\n                value={password}\r\n                autoCorrect={false}\r\n                enablesReturnKeyAutomatically={true}\r\n                keyboardAppearance={'dark'}\r\n                secureTextEntry={true}\r\n                returnKeyType={\"next\"}\r\n                autoCapitalize={'none'}\r\n                />\r\n            </View>\r\n            <View style={styles.text_area}>\r\n                <TextInput \r\n                style={styles.input} \r\n                placeholder=\"Confirm password\"\r\n                onChangeText = {(text)=>{setPasswordDuplicate(text)}}\r\n                value={passwordDuplicate}\r\n                autoCorrect={false}\r\n                enablesReturnKeyAutomatically={true}\r\n                keyboardAppearance={'dark'}\r\n                secureTextEntry={true}\r\n                returnKeyType={\"next\"}\r\n                autoCapitalize={'none'}\r\n                />\r\n            </View>\r\n            <View style={styles.text_area}>\r\n                <TextInput \r\n                style={styles.input} \r\n                placeholder=\"Enter DOB (YYYY-MM-DD)\"\r\n                onChangeText = {(text)=>{setDOB(text)}}\r\n                value={dob}\r\n                autoCorrect={false}\r\n                enablesReturnKeyAutomatically={true}\r\n                keyboardAppearance={'dark'}\r\n                returnKeyType={\"next\"}\r\n                autoCapitalize={'none'}\r\n                />\r\n            </View>\r\n            <View style={styles.submit_area}>\r\n                <Button\r\n                title=\"REGISTER\"\r\n                type=\"outline\"\r\n                buttonStyle={{ borderColor: Colors.border, borderWidth: 2, width: width*0.9, borderRadius:10}}\r\n                titleStyle={{ color: Colors.content }}\r\n                onPress={onSubmitPressed}\r\n                />\r\n            </View>\r\n            <Alerts />\r\n<Loader />\r\n<Message />\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Register\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    main:{\r\n        flex:1,\r\n        backgroundColor: Colors.background, \r\n        justifyContent: 'center', \r\n        alignItems: 'center'\r\n    },\r\n    input:{\r\n        borderWidth: 1,\r\n        borderColor: Colors.border,\r\n        backgroundColor: Colors.base,\r\n        color: Colors.content,\r\n        borderRadius: 10,\r\n        height: height*0.05,\r\n        width: width*0.9,\r\n        padding: 10\r\n    },\r\n    text_area: {\r\n        padding: 10\r\n    },\r\n    submit_area:{\r\n        padding: 10,\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n     },\r\n     logo:{\r\n        color: Colors.content,\r\n        fontFamily: Fonts.logo,\r\n        textAlign: 'center',\r\n        fontSize: height*0.1\r\n     },\r\n})"]},"metadata":{},"sourceType":"module"}