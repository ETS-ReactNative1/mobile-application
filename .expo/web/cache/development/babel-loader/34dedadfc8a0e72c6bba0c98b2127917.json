{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\anthi\\\\Documents\\\\GitHub\\\\cap\\\\components\\\\Message.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Toast from 'react-native-simple-toast';\nexport var Message = function (_Component) {\n  _inherits(Message, _Component);\n\n  var _super = _createSuper(Message);\n\n  function Message() {\n    _classCallCheck(this, Message);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Message, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var messages = this.props.messages;\n\n      if (messages !== prevProps.messages) {\n        Toast.showWithGravity(messages.msg, Toast.LONG, Toast.TOP);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Message;\n}(Component);\nMessage.propTypes = {\n  messages: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    messages: state.message\n  };\n};\n\nexport default connect(mapStateToProps)(Message);","map":{"version":3,"sources":["C:/Users/anthi/Documents/GitHub/cap/components/Message.js"],"names":["React","Component","Fragment","connect","PropTypes","Toast","Message","prevProps","messages","props","showWithGravity","msg","LONG","TOP","propTypes","object","isRequired","mapStateToProps","state","message"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AAEA,WAAaC,OAAb;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,uCAMuBC,SANvB,EAMiC;AAAA,UACjBC,QADiB,GACJ,KAAKC,KADD,CACjBD,QADiB;;AAGzB,UAAGA,QAAQ,KAAKD,SAAS,CAACC,QAA1B,EAAmC;AACnCH,QAAAA,KAAK,CAACK,eAAN,CAAsBF,QAAQ,CAACG,GAA/B,EAAoCN,KAAK,CAACO,IAA1C,EAAgDP,KAAK,CAACQ,GAAtD;AACC;AACJ;AAZL;AAAA;AAAA,6BAca;AACL,aACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AAlBL;;AAAA;AAAA,EAA6BZ,SAA7B;AAAaK,O,CAEFQ,S,GAAW;AACdN,EAAAA,QAAQ,EAAEJ,SAAS,CAACW,MAAV,CAAiBC;AADb,C;;AAmBtB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAW;AAC/BV,IAAAA,QAAQ,EAAEU,KAAK,CAACC;AADe,GAAX;AAAA,CAAxB;;AAIA,eAAehB,OAAO,CAACc,eAAD,CAAP,CAAyBX,OAAzB,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Toast from 'react-native-simple-toast';\r\n\r\nexport class Message extends Component {\r\n\r\n    static propTypes ={\r\n        messages: PropTypes.object.isRequired\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        const { messages } = this.props;\r\n\r\n        if(messages !== prevProps.messages){\r\n        Toast.showWithGravity(messages.msg, Toast.LONG, Toast.TOP);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>({\r\n    messages: state.message\r\n});\r\n\r\nexport default connect(mapStateToProps)(Message);"]},"metadata":{},"sourceType":"module"}